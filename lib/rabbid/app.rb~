module Rabbid
  extend self
  def with v
    yield v
  ensure
    v.close
  end
  class App < Sinatra::Base
    get '/:msg' do |msg|
      slim :message
    end
    post '/:msg' do |msg|
      Rabbid.with Bunny.new do |conn|
        conn.start 
        ch = conn.create_channel
        q = ch.queue("hello")
        ch.default_exchange.publish(msg, routing_key: q.name)
        redirect_to '/'
      end
    end
    get '/' do
      Rabbid.with Bunny.new do |conn|
        conn.start
        ch = conn.create_channel
        q = ch.queue("hello")
        q.subscribe do |d, p, b|
          @body = b
          d.consumer.cancel
          env['async.callback'].call [200, {'content-type' => 'text/plain'}, slim(:index)]
        end
      end
      [-1, {}, []]
    end
  end
end
